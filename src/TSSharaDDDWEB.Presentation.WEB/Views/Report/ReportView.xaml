<UserControl x:Class="TSSharaDDDWEB.Presentation.WEB.Views.Report.ReportView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:NobreakTSShara.UI.ViewModels"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <vm:ReportViewModel x:Key="vmObj"></vm:ReportViewModel>
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,3,16,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#dddddd" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Margin="0,51,0,67" DataContext="{Binding Source={StaticResource vmObj}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="0*"/>
        </Grid.ColumnDefinitions>
        <DataGrid Width="Auto" IsReadOnly="True" ItemsSource="{Binding ReportList, IsAsync=False}" AutoGenerateColumns="False" Margin="8,2,10,6" RenderTransformOrigin="0.501,0.513" d:IsHidden="True" AlternationCount="2" AlternatingRowBackground="#b3eeff">
            <DataGrid.Columns>
                <DataGridTextColumn Width="*" Header="{DynamicResource LabelEvent}" Binding="{Binding EventReasons}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="*" Header="{DynamicResource LabelChartInputVoltage}" Binding="{Binding InputVoltage}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="*" Header="{DynamicResource LabelChartOutputVoltage}" Binding="{Binding OutputVoltage}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="*" Header="{DynamicResource LabelChartLoad}" Binding="{Binding Load}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="*" Header="{DynamicResource LabelGroupBoxBattery}" Binding="{Binding Battery}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="*" Header="{DynamicResource LabelChartFrequency}" Binding="{Binding Frequency}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="*" Header="{DynamicResource LabelChartTemperature}" Binding="{Binding Temperature}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="*" Header="{DynamicResource LabelReportCreationDate}" Binding="{Binding CreationData, StringFormat=dd/MM/yyyy hh:mm}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button Content="{DynamicResource ButttonCleanUpTable}" Style="{StaticResource BaseButtonStyle}" HorizontalAlignment="Left" Margin="12,0,0,-53" VerticalAlignment="Bottom" Width="104" Command="{Binding ClickCommand}" Height="40"/>
        <TextBox HorizontalAlignment="Left" Height="29" Margin="107,-46,0,0" VerticalAlignment="Top" Width="81"
                 TextWrapping="Wrap" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" x:Name="txtfilter">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding FilterCommand}" CommandParameter="{Binding Text, ElementName=txtfilter}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
        <Label x:Name="label" Content="{DynamicResource LabelFilter}" HorizontalAlignment="Left" Margin="12,-47,0,0" VerticalAlignment="Top" Width="76"/>
    </Grid>
</UserControl>
